#  apiVersion - Which version of the Kubernetes API you're using to create this object
apiVersion: v1
#  kind - What kind of object you want to create
kind: Pod
# metadata - Data that helps uniquely identify the object, including a name string, UID, and optional namespace
metadata:
  name: lmpolicyformsource
# spec - What state you desire for the object
spec:
  containers:
  - name: lmpolicyformsource
    image: cuhlbblew/lmpolicyformsource:1.7
    imagePullPolicy: IfNotPresent
    command: [ "/app/startlmpolicyservice.sh"]
    #args: [ "lmpolicyformsource", "127.0.0.1", "8080", "http://127.0.0.1:8081"]
    args: ["$(SERVICE)", "$(URL)"]
    env:
    - name:  SERVICE
      value: "lmpolicyformsource"
    - name:  HOST
      value: "127.0.0.1"
    - name:  PORT
      value: "8080"
    - name:  URL
      value: "http://lmpolicycaptureservice:8081"
---
apiVersion: v1
kind: Service
metadata:
  name: lmpolicyformsource
spec:
  type: ClusterIP ### may be ommited as it is a default type
  selector:
    name: lmpolicyformsource ### should match your labels defined for your angular pods
  ports:
  - protocol: TCP
    targetPort: 8000 ### port your angular app listens on
    port: 8000 ### port on which you want to expose it within your cluster
