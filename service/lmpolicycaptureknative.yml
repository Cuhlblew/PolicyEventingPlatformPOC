#  apiVersion - Which version of the Kubernetes API you're using to create this object
apiVersion: serving.knative.dev/v1
#  kind - What kind of object you want to create
kind: Service
# metadata - Data that helps uniquely identify the object, including a name string, UID, and optional namespace
metadata:
  name: lmpolicycapture-knative
  namespace: default
# spec - What state you desire for the object
spec:
  template:
    spec:
      containerConcurrency: 1
      containers:
        - image: cuhlbblew/lmpolicyformsource:1.17
          command: [ "/app/startlmpolicyservice.sh"]
          #args: [ "lmpolicyformsource", "127.0.0.1", "8080", "http://127.0.0.1:8081"]
          args: ["$(SERVICE)", "$(HOST)", "$(PORT)", "$(BROKER)", "$(TOPIC)", "$(REG)"]
          env:
          - name: TARGET
            value: "lmpolicycapture-target"
          - name:  BROKER
            value: "PLAINTEXT://kafka.confluent.svc.cluster.local:9071"
          - name:  TOPIC
            value: "policy-protobuf"
          - name:  REG
            value: "http://schemaregistry-0.schemaregistry.confluent.svc.cluster.local:8081"
---
apiVersion: v1
kind: Service
metadata:
  name: lmpolicycapture-service
spec:
  type: LoadBalancer ### may be ommited as it is a default type
  selector:
    app: lmpolicycapture ### should match your labels defined for your backend pods
  ports:
  - name: main
    protocol: TCP
    targetPort: 8080 ### port your backend app listens on
    port: 8081 ### port on which you want to expose it within your cluster
